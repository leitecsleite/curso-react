{"version":3,"sources":["components/PostCard/index.jsx","components/Posts/index.jsx","components/utils/index.js","components/Button/index.jsx","components/TextInput/index.jsx","templates/Home/index.jsx","index.js"],"names":["PostCard","post","className","src","cover","alt","title","body","Posts","posts","map","loadPosts","a","postsResponse","fetch","photoResponse","Promise","all","photos","json","postsJson","photosJson","postsAndPhotos","index","url","Button","this","props","text","onClick","disabled","Component","TextInput","searchValue","handleChange","onChange","value","type","Home","state","allPosts","page","postsPerPage","postsPerpage","setState","slice","loadMorePosts","nextPage","nextPosts","push","e","target","noMorePosts","length","filteredPosts","filter","toLowerCase","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.410460af.chunk.js","sourcesContent":["import React from 'react';\r\nimport './style.css';\r\n\r\n// existe outra forma de acessar a propriedade ({title,cover, body,id}) => {};\r\nexport const PostCard= ({post}) => {\r\n    return(\r\n     <div className =\"post\"> \r\n        <img src = {post.cover} alt = {post.title} />\r\n        <div className=\"post-content\">\r\n          <h1>{post.title}</h1>\r\n          <p>{post.body}</p>\r\n        </div>\r\n     </div>  \r\n    )\r\n}","import './style.css';\r\nimport {PostCard} from '../PostCard';\r\n\r\nexport const Posts = ({posts}) => {\r\n  return (\r\n    <div className=\"posts\">\r\n     {posts.map(post => (\r\n        <PostCard \r\n         post={post}\r\n        />\r\n      ))}\r\n   </div>\r\n  )\r\n}","\r\nexport const loadPosts = async () => {\r\n    \r\n    const postsResponse = fetch('https://jsonplaceholder.typicode.com/posts');\r\n    const photoResponse = fetch('https://jsonplaceholder.typicode.com/photos');\r\n   \r\n    const [posts, photos] = await Promise.all([postsResponse, photoResponse]);\r\n\r\n    const postsJson = await posts.json();\r\n    const photosJson = await photos.json(); \r\n\r\n    const postsAndPhotos = postsJson.map((post, index) => {\r\n         return {...post, cover: photosJson[index].url}\r\n    });\r\n\r\n    return postsAndPhotos;\r\n}","import React from 'react';\r\nimport {Component} from 'react';\r\nimport './style.css'\r\n\r\n export class Button extends Component {\r\n     \r\n      render(){\r\n         const {text, onClick, disabled} = this.props;\r\n         return(\r\n            <button \r\n             disabled ={disabled}\r\n             className=\"button\"\r\n             onClick = {onClick}>\r\n                {text}\r\n            </button>\r\n         );\r\n      }\r\n  \r\n}\r\n","import './style.css';\r\n\r\nexport const TextInput =({searchValue, handleChange})=> {\r\n    return(\r\n        <input \r\n        className=\"text-input\"\r\n        onChange={handleChange}\r\n        value={searchValue}\r\n        type = \"search\" /> \r\n    )\r\n}","import './style.css';\n\n//importação dos componentes \nimport {Component} from 'react';\nimport{Posts} from '../../components/Posts';\nimport {loadPosts} from '../../components/utils';\nimport { Button } from '../../components/Button';\nimport {TextInput} from '../../components/TextInput';\n\n class Home extends Component {\n    state = {\n      posts: [],\n      allPosts: [],\n      page: 0,\n      postsPerPage: 2,\n      searchValue: ''\n\n    };\n\n    async componentDidMount(){\n      this.loadPosts();\n    }\n    loadPosts =async () => {\n      const {page, postsPerpage} = this.state; \n      const postsAndPhotos = await loadPosts();\n      this.setState({\n        posts: postsAndPhotos.slice(0,2),\n        allPosts: postsAndPhotos,\n\n      });\n    } \n    loadMorePosts = () => {\n      const {\n        page,\n        postsPerPage,\n        allPosts,\n        posts\n      }= this.state; \n\n      const nextPage = page + postsPerPage; \n      const nextPosts = allPosts.slice(nextPage, nextPage + postsPerPage);\n      posts.push(...nextPosts);\n\n      this.setState({posts, page: nextPage});  \n    }\n\n    handleChange = (e) => {\n      const{value} = e.target; \n      this.setState({searchValue: value}); \n\n    }\n\n    //render\n    render(){\n      const {posts, page, postsPerPage, allPosts,searchValue} = this.state; \n      const noMorePosts = page + postsPerPage >= allPosts.length; \n\n      const filteredPosts = !!searchValue ?\n       allPosts.filter(post => {\n         return post.title.toLowerCase().includes(\n          searchValue.toLowerCase())\n       })\n      : posts; \n\n    return (\n      <section className =\"container\">  \n       \n        <div className=\"search-container\">\n          {!!searchValue && (\n           <>\n            <h1>Search value:{searchValue}</h1>\n           </> \n          )}\n\n          <TextInput searchValue ={searchValue} handleChange ={this.handleChange}/>\n        </div>\n\n\n          {filteredPosts.length > 0 && (\n             <Posts posts = {filteredPosts}/>\n          )}  \n\n          {filteredPosts.length === 0 && (\n            <p>Não existem posts =(</p>\n          )}    \n\n          <div className = \"butto-container\">  \n             {!searchValue && (\n              <Button\n               disabled = {noMorePosts}\n               text=\"Load more posts\"\n               onClick = {this.loadMorePosts}\n              />\n           )}\n          </div>\n      </section>  \n    ); \n\n  }\n}\n\nexport default Home;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/global-style.css';\nimport Home from './templates/Home';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Home />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}